{
    order realip first
    order coraza_waf after realip

    log {
        format json {
            time_format iso8601
        }
        output stdout
        include http.request.header.x-real-ip http.request.remote_host \
                http.response.status http.request.uri http.request.method
    }
}

:{$PORT} {

    # Health check
    respond /health 200 {
        body "OK"
    }

    # Trust addresses coming from your edge/LB only
    realip {
        header X-Forwarded-For
        header X-Real-IP
        from   100.64.0.0/10
    }

    # Match all non-websocket requests
    @not_websocket {
        not header Connection *upgrade*
        not header Upgrade    websocket
    }

    # Security headers
    header {
        Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
        Content-Security-Policy   "default-src 'self'; upgrade-insecure-requests"
        Referrer-Policy           no-referrer
        Permissions-Policy        interest-cohort=()
        X-Content-Type-Options    nosniff
        X-Frame-Options           SAMEORIGIN
        -Server
    }

    # OWASP-CRS powered WAF (skipped for websockets)
    coraza_waf @not_websocket {
        load_owasp_crs
        directives `
            Include @coraza.conf-recommended
            Include @crs-setup.conf.example
            Include @owasp_crs/*.conf

            SecAction "id:900000,phase:1,setvar:'tx.paranoia_level=2'"

            SecRuleEngine On
            SecAuditEngine RelevantOnly
            SecAuditLogParts ABIFHZ
            SecAuditLog /dev/stdout
            SecAuditLogFormat json
        `
    }

    # Pass everything else to the backend defined at container runtime:
    #   docker run -e BACKEND=http://my-app:9000 â€¦
    reverse_proxy {env.BACKEND}
}
