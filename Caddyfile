{
    order realip first
    order coraza_waf after realip
}

:{$PORT} {
    log

    respond /health 200
    encode gzip zstd

    realip {
        header X-Forwarded-For
        header X-Real-IP
        header CF-Connecting-IP
        from   100.64.0.0/10
    }

    @not_websocket {
        not header Connection *upgrade*
        not header Upgrade websocket
    }

    header {
        Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
        Content-Security-Policy  upgrade-insecure-requests
        Referrer-Policy          no-referrer
        Permissions-Policy       interest-cohort=()
        X-Content-Type-Options   nosniff
        X-Frame-Options          SAMEORIGIN
        -Server
    }

    coraza_waf @not_websocket {
        load_owasp_crs
        directives `
            Include @coraza.conf-recommended
            SecRuleEngine On
            SecAuditEngine RelevantOnly
            SecAuditLogParts ABCDEFGHIJKZ
            SecAuditLog /dev/stdout
            SecAuditLogFormat json
            SecDebugLog /dev/stderr
            SecDebugLogLevel 3
            SecComponentSignature "Coraza WAF v3.x"
            SecAction "id:900000,phase:1,nolog,pass,t:none,setvar:tx.paranoia_level=2"
            SecAction "id:900001,phase:1,nolog,pass,t:none,setvar:tx.blocking_paranoia_level=2"
            SecAction "id:900002,phase:1,nolog,pass,t:none,setvar:tx.detection_paranoia_level=2"
            SecAction "id:900010,phase:1,nolog,pass,t:none,setvar:tx.allowed_methods=GET HEAD POST OPTIONS PUT PATCH DELETE"
            Include @crs-setup.conf.example
            Include @owasp_crs/*.conf
        `
    }

    reverse_proxy {env.BACKEND} {
        header_up X-Forwarded-Proto  https
        header_up X-Forwarded-Scheme https
    }
}
