{
    order realip first
    order coraza_waf after realip

    log {
        format json
        output stdout
    }
}

:{$PORT} {
    respond /health 200

    realip {
        header X-Forwarded-For  
        header X-Real-IP
        from   100.64.0.0/10
    }

    @not_websocket {
        not header Connection *upgrade*
        not header Upgrade websocket
    }

    header {
        Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
        Content-Security-Policy  upgrade-insecure-requests
        Referrer-Policy          no-referrer
        Permissions-Policy       interest-cohort=()
        X-Content-Type-Options   nosniff
        X-Frame-Options          SAMEORIGIN
        -Server
    }

    coraza_waf @not_websocket {
        load_owasp_crs
        directives `
            Include @coraza.conf-recommended
            Include @crs-setup.conf.example
            Include @owasp_crs/*.conf

            SecAction "id:900000,phase:1,setvar:'tx.paranoia_level=2'"

            # Force Coraza to use the real IP from headers for logging
            SecRule REQUEST_HEADERS:X-Real-IP "^(.+)$" \
                "id:1001,phase:1,pass,nolog,setvar:'tx.real_ip=%{MATCHED_VAR}'"

            # Override the remote address for audit logging
            SecAction "id:1002,phase:1,pass,nolog,\
                setvar:'tx.client_ip=%{REQUEST_HEADERS.X-Real-IP}'"

            SecRuleEngine On
            SecAuditEngine RelevantOnly
            SecAuditLogParts ABIFHZ
            SecAuditLog /dev/stdout
            SecAuditLogFormat json
        `
    }

    reverse_proxy {env.BACKEND} {
        header_up X-Forwarded-Proto  https
        header_up X-Forwarded-Scheme https
    }
}
